var MAX_POINTS = 200;
var coefs = {'a': 0.0001,    // infection coefficient of known viruses
             'a0': 0.001,    // infection coefficient of zero days
             'b': 1,         // rate of restoring quarantined computers
             'c': 0.2,       // fraction of known viruses actually working
             'e': 0.8,       // fraction of 0day viruses actually working
             'f': 0.9,       // detection rate of known infected viruses
             'g': 0.2,       // detection rate of 0days
             'h': 1,         // rate of conversion from 0days to known
             'k': 1,         // clustering coefficient of computers
             'l': 1.0,       // Known malware growth
             'm': 0.5,       // Known cnc detection/death
             'n': 0.1,       // Unknown malware growth
             'o': 0.2,       // Unknown cnc detection/death
             'p': 0.05,
             'p0': 0.08,
             'V0': 989,      // Initial number of Vulnerable computers
             'Q0': 10,
             'I0': 0,
             'U0': 1,
             'W0': 100,
             'Z0': 10};

var ids_to_coefs =   {'aValMal':  'a',
                      'a0ValMal': 'a0',
                      'bValMal':  'b',
                      'cValMal':  'c',
                      'fValMal':  'f',
                      'eValMal':  'e',
                      'gValMal':  'g',
                      'hValMal':  'h',
                      'kValMal':  'k',
                      'lValMal':  'l',
                      'mValMal':  'm',
                      'nValMal':  'n',
                      'oValMal':  'o',
                      'pValMal':  'p',
                      'p0ValMal': 'p0',
                      'V0ValMal': 'V0',
                      'Q0ValMal': 'Q0',
                      'I0ValMal': 'I0',
                      'U0ValMal': 'U0',
                      'W0ValMal': 'W0',
                      'Z0ValMal': 'Z0'
                    };



function create_ml_chart(el_id, x_label, y_label, title, y_ticks, data){
  var chart = nv.models.lineChart()
                .margin({left: 100})
                .useInteractiveGuideline(true)
                .transitionDuration(350)
                .showLegend(true)
                .showYAxis(true)
                .showXAxis(true)
  ;
  d3.select(el_id + ' svg')
    .append("text")
    .attr("x", 350)
    .attr("y", 50)
    .attr("text-anchor", "middle")
    .text(title);

  chart.xAxis     //Chart x-axis settings
      .axisLabel(x_label)
      .tickFormat(d3.format(',r'));

  chart.yAxis     //Chart y-axis settings
      .axisLabel(y_label)
      .tickFormat(d3.format(y_ticks));

  d3.select(el_id + ' svg').datum(data).call(chart);

  //Update the chart when window resizes.
  // nv.utils.windowResize(function() { chart.update() });
  return chart;
}

function calc_ml(V, Q, I, U, W, Z){
    var n = 1 - Math.pow(Math.E, (-coefs['a'] * W));
    var n0 = 1 - Math.pow(Math.E, (-coefs['a0'] * Z));

    var w = 1 - Math.pow(Math.E, (-coefs['p'] * W));
    var w0 = 1 - Math.pow(Math.E, (-coefs['p0'] * Z));

    var bQ = coefs['b'] * Q;
    var gU = coefs['g'] * U;
    var Vk = Math.pow(V, coefs['k']);
    var hU = coefs['h'] * U;
    var V_new = -coefs['e'] * Vk * n0 - coefs['c'] * Vk * n + bQ;
    var Q_new = coefs['f'] * I - bQ + gU;
    var I_new = coefs['c'] * Vk * n - coefs['f'] * I + hU;
    var U_new = coefs['e'] * Vk * n0 - gU - hU;
    var W_new = coefs['l'] * w * V - coefs['m'] * W;
    var Z_new = coefs['n'] * w0 * V - coefs['o'] * Z;
    return {'dv': V_new, 'dq': Q_new, 'di': I_new, 'du': U_new,
            'dw': W_new, 'dz': Z_new};
}
function midpoint_ml(V, Q, I, U, W, Z, dt, N){
  var res={};
  var total = V[0].y + Q[0].y + I[0].y + U[0].y;
  for (var i = 0; i < N; i++){
    res = calc_ml(V[i].y, Q[i].y, I[i].y, U[i].y, W[i].y, Z[i].y);
    res = calc_ml(V[i].y + dt * res['dv']/2,
                  Q[i].y + dt * res['dq']/2,
                  I[i].y + dt * res['di']/2,
                  U[i].y + dt * res['du']/2,
                  W[i].y + dt * res['dw']/2,
                  Z[i].y + dt * res['dz']/2);
    var t_new = i * dt;
    V[i + 1] = {x: t_new, y: V[i].y + dt * res['dv']};
    Q[i + 1] = {x: t_new, y: Q[i].y + dt * res['dq']};
    U[i + 1] = {x: t_new, y: U[i].y + dt * res['du']};
    I[i + 1] = {x: t_new, y: I[i].y + dt * res['di']};
    W[i + 1] = {x: t_new, y: W[i].y + dt * res['dw']};
    Z[i + 1] = {x: t_new, y: Z[i].y + dt * res['dz']};

  }
  V.map(function(el){el['y'] = el['y']/ total; return el;});
  Q.map(function(el){el['y'] = el['y']/ total; return el;});
  U.map(function(el){el['y'] = el['y']/ total; return el;});
  I.map(function(el){el['y'] = el['y']/ total; return el;});

  return [{values: V, key: 'Vulnerable', color:'#2D882D'},
          {values: Q, key: 'Quarantined', color: '#226666'},
          {values: I, key: 'Infected', color: '#AA6C39'},
          {values: U, key: '0Day-Infected', color: '#AA3939'},
          {values: W, key: 'Known malware', color: '#2D882D'},
          {values: Z, key: '0Day malware', color: '#226666'}];
  }

function filter_every_n(elements, n){
  var new_elements = [];
  var N = elements.length;
  for (var i=0; i< N; i++){
    if (i % n == 0)
      new_elements.push(elements[i]);
  }
  return new_elements;
}

function do_malware(){
  var V = [], Q = [], I = [], U = [], W = [], Z = [];
  var dt = 0.1;
  var days = 100;
  var N = Math.floor(days/dt);
  V[0] = {x: 0, y: coefs['V0']};
  Q[0] = {x: 0, y: coefs['Q0']};
  I[0] = {x: 0, y: coefs['I0']};
  U[0] = {x: 0, y: coefs['U0']};
  W[0] = {x: 0, y: coefs['W0']};
  Z[0] = {x: 0, y: coefs['Z0']};

  arr = midpoint_ml(V, Q, I, U, W, Z, dt, N);

  // filter values so that we have a max of MAX_POINTS per chart
  var n = 1;
  if (N > MAX_POINTS){
    n = Math.floor(N / MAX_POINTS);
  }
  for (var i=0; i<4; i++){
    arr[i]['values'] = filter_every_n(arr[i]['values'], n);
  }
  return arr;
}

var initial_data = do_malware();

var chart1 = create_ml_chart('#ml_computers', 'Time (days)',
    'Fraction of computers', "Infected Computer Dynamics", '0.2f',
    initial_data.slice(0,4));
var chart2 = create_ml_chart('#ml_cnc', 'Time (days)', 'Number of Malware/CnC',
            "CnC/Malware Proliferation", ',f', initial_data.slice(4,6))

nv.addGraph(chart1);
nv.addGraph(chart2);

for (var k in coefs){
    d3.select("#" + k + "ValMal").on("input", update);
}
function update(){
    coefs[ids_to_coefs[this.id]] = +this.value;
    var data = do_malware();
    d3.select('#ml_computers svg').datum(data.slice(0,4)).call(chart1);
    d3.select('#ml_cnc svg').datum(data.slice(4,6)).call(chart2);
}

